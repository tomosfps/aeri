name: Build And Push Docker images

on:
  push:
    branches:
      - 'main'

jobs:
  build_base_layers:
    name: Build Docker base layers for caching
    runs-on: ubuntu-latest
    steps:
      -
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: r2.ecchi.cloud
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Setup Build Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            pnpm-store
          key: pnpm-cache-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-cache-
      -
        name: Inject cache
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          cache-map: |
            {
              "pnpm-store": "/pnpm/store"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      -
        name: Build base layers
        uses: docker/build-push-action@v6
        with:
          target: build
          push: true
          tags: r2.ecchi.cloud/aeri_base
          cache-from: type=registry,ref=r2.ecchi.cloud/aeri_base
          cache-to: type=inline

  build_node_images:
    name: Build and push Docker image
    needs: build_base_layers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [handler, gateway, database-setup, website]
    steps:
      -
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: r2.ecchi.cloud
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push ${{ matrix.target }} image
        uses: docker/build-push-action@v6
        with:
          target: ${{ matrix.target }}
          push: true
          tags: r2.ecchi.cloud/aeri_${{ matrix.target }}
          cache-from: type=registry,ref=r2.ecchi.cloud/aeri_${{ matrix.target }}
          cache-to: type=inline

  build_api_image:
    name: Build and push Rust API image
    runs-on: ubuntu-latest
    steps:
      -
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to docker registry
        uses: docker/login-action@v3
        with:
          registry: r2.ecchi.cloud
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile.api
          push: true
          tags: r2.ecchi.cloud/aeri_api
          cache-from: type=registry,ref=r2.ecchi.cloud/aeri_api
          cache-to: type=inline
